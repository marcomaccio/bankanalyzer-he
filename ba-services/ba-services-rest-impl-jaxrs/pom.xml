<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>name.marmac.bankanalizer</groupId>
        <version>1.0.0.BUILD-SNAPSHOT</version>
        <artifactId>ba-services</artifactId>
    </parent>

    <artifactId>ba-services-rest-impl-jaxrs</artifactId>
    <packaging>war</packaging>

    <name>BA :: BANK ANALYZER HE :: SERVICES :: REST IMPL JAXRS</name>
    <description></description>
    <url>http://marcomaccio.github.io/bankanalyzer-he/ba-services/ba-services-rest-api</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <filters>
            <filter>profiles/${build.profile.id}/config.properties</filter>
        </filters>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/integration-test/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${source.java.compliancy.version}</source>
                    <target>${target.java.compliancy.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <!-- States that the plugin's add-test-source goal is executed at generate-test-sources phase. -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of integration tests. -->
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <!-- For version 8+
                <groupId>org.eclipse.jetty</groupId>
                -->
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-maven-plugin.version}</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopKey>STOP</stopKey>
                    <stopPort>9999</stopPort>

                    <webApp>
                        <contextPath>/cxf</contextPath>
                    </webApp>

                    <!-- Config for Jetty 8+
                    <httpConnector>
                        <port>9191</port>
                        <idleTimeout>60000</idleTimeout>
                    </httpConnector>
                    -->
                    <!-- Config for Jetty 7-  -->
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9191</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>


                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                        <version>${slf4j.version}</version>
                    </dependency>

                </dependencies>

                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. ÃŸ-->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!-- States that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-war-plugin</artifactId>
               <version>${maven-war-plugin.version}</version>
               <configuration>
                  <archive>
                   <!-- will put the entries into META-INF/MANIFEST.MF file -->
                    <manifestEntries>
                        <Implementation-Version>${project.version}</Implementation-Version>
                    </manifestEntries>
                  </archive>
               </configuration>
            </plugin>

            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dbunit-maven-plugin</artifactId>
                <version>1.0-beta-3</version>

                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hsqldb</groupId>
                        <artifactId>hsqldb</artifactId>
                        <version>${hsqldb.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <driver>${deployment.jdbcDriverName}</driver>
                    <url>${deployment.jdbcUrl}</url>
                    <username>${deployment.jdbcUserName}</username>
                    <password>${deployment.jdbcPassword}</password>
                    <src>${deployment.createCustomers}</src>
                </configuration>

                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                          <goal>operation</goal>
                        </goals>

                        <configuration>
                            <driver>${deployment.jdbcDriverName}</driver>
                            <url>${deployment.jdbcUrl}</url>
                            <username>${deployment.jdbcUserName}</username>
                            <password>${deployment.jdbcPassword}</password>
                            <type>CLEAN_INSERT</type>
                            <format>xml</format>
                            <dataTypeFactoryName>${deployment.dataTypeFactory}</dataTypeFactoryName>
                            <metadataHandlerName>${deployment.metadataHandler}</metadataHandlerName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>

    </build>

    <dependencies>
        <!-- INTERNAL PROJECT DEPENDENCIES - START -->
        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-commons-resources-xsd</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-commons-exceptions-xsd</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-dal-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-dal-impl-jpa</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-services-rest-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- INTERNAL PROJECT DEPENDENCIES - END -->


        <!-- EXTERNAL PROJECT DEPENDENCIES - START -->

        <!-- APACHE CXF DEPENDENCIES - START -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-search</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
          <version>2.5</version>
          <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>${javaee-web-api.version}</version>
        </dependency>


        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${codehaus-jackson.version}</version>
        </dependency>

        <!-- FASTERXML JACKSON Dependencies  - START -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${fasterxml-jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${fasterxml-jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${fasterxml-jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>${fasterxml-jackson.version}</version>
        </dependency>
        <!-- FASTERXML JACKSON Dependencies  - END -->

        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-jaxrs_2.10</artifactId>
            <version>${swagger-jaxrs.version}</version>
            <exclusions>
                <exclusion>
                     <groupId>javax.ws.rs</groupId>
                     <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Springframework Dependencies  - START -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Springframework Dependencies  - END -->

        <!-- javamelody-core -->
        <!-- With servlet 2.5 the max version for java melody is 1.54.0-->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>${java-melody-core.version}</version>
        </dependency>
        <!-- itext, option to add PDF export -->
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>${itext.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>bcmail-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bcprov-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bctsp-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>org.jrobin</groupId>
            <artifactId>jrobin</artifactId>
            <version>1.5.9</version>
        </dependency>

        <!-- TESTING FRAMEWORKS: Cucumber for U.A. - START -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- TESTING FRAMEWORKS: Cucumber for U.A. - END -->

        <!-- EXTERNAL PROJECT DEPENDENCIES - END -->
    </dependencies>

    <reporting>
          <outputDirectory>${basedir}/target/site</outputDirectory>
    </reporting>

</project>