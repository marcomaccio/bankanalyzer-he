<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>name.marmac.bankanalizer</groupId>
        <version>1.0.0.BUILD-SNAPSHOT</version>
        <artifactId>ba-dal</artifactId>
    </parent>

    <artifactId>ba-dal-impl-jpa</artifactId>
    <packaging>jar</packaging>

    <name>BA :: BANK ANALYZER HE :: DAL :: IMPL JPA</name>
    <description>DATA ACCESS LAYER IMPLEMENTATION module with Eclipse Link JPA</description>
    <url>http://marcomaccio.github.io/bankanalyzer-he/ba-dal/ba-dal-impl-jpa</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <filters>
            <filter>profiles/${build.profile.id}/config.properties</filter>
        </filters>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/scripts</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/integration-test/resources</directory>
                <filtering>true</filtering>
                <includes>
                  <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <!-- States that the plugin's add-test-source goal is executed at generate-test-sources phase. -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of integration tests. -->
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>

                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. ÃŸ-->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!-- States that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase-maven-plugin.version}</version>
                <configuration>
                    <propertyFileWillOverride>true</propertyFileWillOverride>
                    <propertyFile>${project.build.directory}/classes/liquibase/liquibase.properties</propertyFile>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <url>${deployment.jdbcUrl}</url>
                    <user>${deployment.jdbcUserName}</user>
                    <password>${deployment.jdbcPassword}</password>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dbunit-maven-plugin</artifactId>
                <version>${dbunit-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
                <!-- Common Configuration  -->
                <configuration>
                    <driver>${deployment.jdbcDriverName}</driver>
                    <url>${deployment.jdbcUrl}</url>
                    <username>${deployment.jdbcUserName}</username>
                    <password>${deployment.jdbcPassword}</password>

                    <src>${deployment.createBankAccounts}</src>
                    <!--
                    <dataTypeFactoryName>${deployment.dataTypeFactory}</dataTypeFactoryName>
                    <metadataHandlerName>${deployment.metadataHandler}</metadataHandlerName>
                    -->
                </configuration>
                <!-- Executions-->
                <executions>
                    <execution>
                        <id>load-test-data</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                          <goal>operation</goal>
                        </goals>
                        <configuration>
                            <driver>${deployment.jdbcDriverName}</driver>
                            <url>${deployment.jdbcUrl}</url>
                            <username>${deployment.jdbcUserName}</username>
                            <password>${deployment.jdbcPassword}</password>
                            <type>CLEAN_INSERT</type>
                            <format>xml</format>
                            <dataTypeFactoryName>${deployment.dataTypeFactory}</dataTypeFactoryName>
                            <metadataHandlerName>${deployment.metadataHandler}</metadataHandlerName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <!-- INTERNAL dependencies - START -->
        <dependency>
            <groupId>name.marmac.bankanalizer</groupId>
            <artifactId>ba-dal-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- INTERNAL dependencies - END -->

        <!-- EXTERNAL dependencies - START -->
        <!-- Springframework Dependencies  - START -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Springframework Dependencies  - END -->

        <!-- EclipseLink Dependencies  - START -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>${javax-persistence.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>
        <!-- EclipseLink Dependencies  - END -->

        <!-- DB Driver dependencies - START -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase-maven-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <!-- DB Driver dependencies - END -->

        <!-- TESTING dependencies - START -->
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
            <version>${spring-test-dbunit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- TESTING dependencies - END -->
        <!-- EXTERNAL dependencies - END -->
    </dependencies>

    <reporting>
          <outputDirectory>${basedir}/target/site</outputDirectory>
    </reporting>

    <profiles>
        <!-- OVERRIDE docker-mysql profile in order to:
            - Add the creation of the docker image for the db
            - Start the Db docker image
            - Inject the docker image with the correct schema.
        -->
        <profile>
            <id>docker-mysql-dal</id>
            <properties>
                <dbcontainer.port>3306</dbcontainer.port>
            </properties>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <logDate>default</logDate>
                            <verbose>true</verbose>
                            <autoPull>always</autoPull>
                            <useColor>true</useColor>
                            <registry>index.docker.io</registry>
                            <images>
                                <image>
                                    <alias>ba-db</alias>
                                    <name>marcomaccio/ba-db:${project.version}</name>

                                    <build>
                                        <tags>
                                            <tag>${project.version}</tag>
                                            <tag>latest</tag>
                                        </tags>
                                        <assembly>
                                            <dockerFileDir>${project.basedir}/src/main/resources/docker/badb</dockerFileDir>
                                        </assembly>
                                    </build>
                                    <!-- Running the container -->
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>tomcat.port:8080</port>
                                        </ports>
                                        <env>
                                            <MYSQL_ROOT_PASSWORD>baAdmin2015</MYSQL_ROOT_PASSWORD>
                                        </env>
                                        <!--
                                        <wait>

                                            <url>http://localhost:${dbcontainer.port}</url>
                                            <time>10000</time>
                                        </wait>
                                        <links>
                                            <link>db</link>
                                        </links>
                                        -->
                                        <log>
                                            <color>cyan</color><prefix>TC</prefix>
                                        </log>
                                    </run>
                                </image>
                                <!--
                                <image>
                                    <alias>badb-client</alias>
                                    <name>marcomaccio/bankanalyzer-db-client:${project.version}</name>
                                    <build>
                                        <tags>
                                            <tag>${project.version}</tag>
                                        </tags>
                                        <assembly>
                                            <dockerFileDir>${project.build.directory}/classes/docker/badb-client</dockerFileDir>
                                            <descriptor>${project.basedir}/src/main/descriptors/assembly-dbclient.xml</descriptor>
                                        </assembly>
                                    </build>
                                </image>
                                -->
                            </images>
                        </configuration>
                        <!-- Hooking into the lifecycle -->
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                                </execution>
                                <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                  <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>